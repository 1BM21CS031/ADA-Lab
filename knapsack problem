
#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<stdlib.h>

int calc(int weight[],int profit[],int wt, int i, int j,int b[][wt])
{
    int a;
    int l;
    if(j>=weight[i])
        l=(b[i-1][j-weight[i]])+profit[i];
    else
        l=(b[i][j-1]);
   
    
    a=fmax(b[i-1][j],l);
    return a;
}  
int main ()
{
  int n;  
  printf ("Enter the number of items \n");
  scanf ("%d", &n);

  int item[n+1], weight[n+1],profit[n+1],wt = 0;
  int i, j;
  printf ("Enter the items \n");
  for (i = 1; i <= n ;i++)
    scanf ("%d", &item[i]);

  printf ("Enter the weights \n");
  for (i = 1; i <= n ;i++)
    scanf ("%d", &weight[i]);

  printf ("Enter the profits \n");
  for (i = 1; i <= n ;i++)
    scanf ("%d", &profit[i]);
  item[0]=0;
  weight[0]=0;
  profit[0]=0;    

 
  // finding maximum weight
  for (i = 0; i <=n ;i++)
    if (weight[i] > wt)
      wt = weight[i];
     
int b[n+1][wt+1];
//initialising all values to 0
  for (i = 0; i <= n ;i++)
      for (j = 0; j <= wt; j++)
            b[i][j]=0;
       
  //printing the grid
  for (i = 0; i <= n ;i++)
    {
      for (j = 0; j <= wt; j++)
        {
            if (i == 0 || j == 0)
                printf ("%d \t",b[i][j]);
            else
            {
                b[i][j] = calc(weight,profit,wt+1,i,j,b);
                printf ("%d \t", b[i][j]);
            }
        }
         printf ("\n");
       
    }
return 0;
}


